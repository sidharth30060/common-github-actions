# Copyright (c) 2025 Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0

# Reusable workflow to perform operator version update
# To perform csm-operator driver version update, needs two arguments as input to the workflow
name: CSM Operator Driver Version Update

on:
  workflow_call:
    inputs:
      csm-version:
        description: "CSM program version, ex: v1.14.0, v1.15.0, ..."
        required: true
        type: string
      update-option:
        description: 'Select the update flag, ex. "nightly" or "tag"'
        required: true
        type: string

jobs:
  driver-version-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout csm repository
        uses: actions/checkout@v4
        with:
          repository: sidharth30060/csm
          path: csm

      - name: Read values from csm-versions.yaml
        id: read_values
        run: |
          extract_value() {
            grep -E "^$1" csm/config/csm-versions.yaml | cut -d ':' -f 2 | tr -d '[:space:]'
          }
          remove_v_prefix() {
            local version="$1"
            version="${version#v}"
            echo "$version"
          }

          csm_version=$(extract_value 'csm-version')
          csi_powerscale=$(extract_value 'csi-powerscale')
          csi_powerstore=$(extract_value 'csi-powerstore')
          csi_powermax=$(extract_value 'csi-powermax')
          csi_vxflexos=$(extract_value 'csi-vxflexos')
          csi_unity=$(extract_value 'csi-unity')

          csi_powerscale=$(echo "$csi_powerscale" | grep -oP '(?<=^v).*|^[^v].*')
          csi_powerstore=$(echo "$csi_powerstore" | grep -oP '(?<=^v).*|^[^v].*')
          csi_powermax=$(echo "$csi_powermax" | grep -oP '(?<=^v).*|^[^v].*')
          csi_vxflexos=$(echo "$csi_vxflexos" | grep -oP '(?<=^v).*|^[^v].*')
          csi_unity=$(echo "$csi_unity" | grep -oP '(?<=^v).*|^[^v].*')

          echo "CSM_VERSION=$csm_version" >> $GITHUB_ENV
          echo "CSI_POWERSCALE=$csi_powerscale" >> $GITHUB_ENV
          echo "CSI_POWERSTORE=$csi_powerstore" >> $GITHUB_ENV
          echo "CSI_POWERMAX=$csi_powermax" >> $GITHUB_ENV
          echo "CSI_VXFLEXOS=$csi_vxflexos" >> $GITHUB_ENV
          echo "CSI_UNITY=$csi_unity" >> $GITHUB_ENV

      - name: Checkout csm-operator repository
        uses: actions/checkout@v4
        with:
          repository: sidharth30060/csm-operator
          path: csm-operator

      - name: Set Up Go Environment
        uses: actions/setup-go@v5

      - name: Install yq
        run: |
          go install github.com/mikefarah/yq/v4@latest

      - name: Updating Driver version
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          echo "Input csm version --> ${{ inputs.csm-version }}"
          echo "Update flag --> ${{ inputs.update-option }}"
          csm_ver_provided=${{ inputs.csm-version }}

          csm_repo_ver="$(echo -e "${CSM_VERSION}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
          csm_ver_provided="$(echo -e "${csm_ver_provided}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"

          echo "./.github/scripts/driver-version-update.sh --driver_update_type \"major\" --release_type \"${{ inputs.update-option }}\" --powerscale_version \"$CSI_POWERSCALE\" --powermax_version \"$CSI_POWERMAX\" --powerflex_version \"$CSI_VXFLEXOS\" --powerstore_version \"$CSI_POWERSTORE\" --unity_version \"$CSI_UNITY\""
          if [ $csm_repo_ver == $csm_ver_provided ]; then
          echo "CSM version verified, proceeding with the update..."
          chmod +x ./.github/scripts/driver-version-update.sh
          bash ./.github/scripts/driver-version-update.sh --driver_update_type "major" --release_type "${{ inputs.update-option }}" --powerscale_version "$CSI_POWERSCALE" --powermax_version "$CSI_POWERMAX" --powerflex_version "$CSI_VXFLEXOS" --powerstore_version "$CSI_POWERSTORE" --unity_version "$CSI_UNITY"
          else
          echo "CSM version mismatch detected. Please verify and update the version file in the CSM repository."
          fi

      - name: Commit and Push Changes to New Branch
        working-directory: ${{ github.workspace }}
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          cd csm-operator

          # Create a new branch
          BRANCH_NAME="test-driver-update-${{ inputs.csm-version }}"
          git checkout -b "$BRANCH_NAME"

          # Stage all changes
          git add .

          # Commit the changes
          git commit -m "Test: Update driver versions for CSM ${{ inputs.csm-version }}"

          # Push the branch to your fork
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/sidharth30060/csm-operator.git "$BRANCH_NAME"

      
